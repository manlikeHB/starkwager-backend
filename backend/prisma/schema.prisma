// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  wagers      Wager[]

  @@map("categories")
}

model Wager {
  id          String    @id @default(uuid())
  name        String
  description String
  categoryId  String    @map("category_id")
  tags        String[]
  stakeAmount Float     @map("stake_amount")
  createdById String    @map("created_by")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  // Relationships
  category   Category @relation(fields: [categoryId], references: [id])
  createdBy  User     @relation(fields: [createdById], references: [id])

  @@map("wagers")
}


model User {
  id         String   @id @default(uuid())
  email      String?  @unique
  username   String?  @unique
  address    String   @unique
  picture    String?
  isVerified Boolean  @default(false)
  roles       Role     @default(User) // Set default role to 'User'
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  wagers      Wager[]

  @@map("users")
}

enum Role {
  User
  Admin
}

model Hashtag {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  
  @@map("hashtags")
}