services:
  dev_api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - PORT=${PORT:-8080}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - 8080:${PORT}
    networks:
      - starknet
    volumes:
      - ./src:/app/src
    depends_on:
      postgres_db:
        condition: service_healthy
    env_file:
      - .env

  postgres_db:
    image: postgres
    ports:
      - "5432:5432"
    restart: always
    user: ${POSTGRES_USER}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - starknet
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB_NAME=${POSTGRES_DB_NAME}
      - POSTGRES_DB_SCHEMA=${POSTGRES_DB_SCHEMA}
      - POSTGRES_DB_HOST=${POSTGRES_DB_HOST}
      - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
      - DATABASE_URL=${DATABASE_URL}
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
      
volumes:
  db-data:
networks:
  starknet:
    driver: bridge